[{"/home/daniel/Projects/formexport/src/index.js":"1","/home/daniel/Projects/formexport/src/App.js":"2","/home/daniel/Projects/formexport/src/reportWebVitals.js":"3","/home/daniel/Projects/formexport/src/services/history.js":"4","/home/daniel/Projects/formexport/src/routes/routes.js":"5","/home/daniel/Projects/formexport/src/pages/receipt/receipt.js":"6","/home/daniel/Projects/formexport/src/pages/receipt/receiptContent.js":"7","/home/daniel/Projects/formexport/src/componentes/button/button.js":"8","/home/daniel/Projects/formexport/src/pages/receipt/styles.js":"9","/home/daniel/Projects/formexport/src/componentes/input/input.js":"10","/home/daniel/Projects/formexport/src/componentes/button/styles.js":"11","/home/daniel/Projects/formexport/src/componentes/input/styles.js":"12","/home/daniel/Projects/gerador_boleto/src/index.js":"13","/home/daniel/Projects/gerador_boleto/src/App.js":"14","/home/daniel/Projects/gerador_boleto/src/reportWebVitals.js":"15","/home/daniel/Projects/gerador_boleto/src/routes/routes.js":"16","/home/daniel/Projects/gerador_boleto/src/services/history.js":"17","/home/daniel/Projects/gerador_boleto/src/pages/receipt/receipt.js":"18","/home/daniel/Projects/gerador_boleto/src/pages/receipt/receiptContent.js":"19","/home/daniel/Projects/gerador_boleto/src/componentes/button/button.js":"20","/home/daniel/Projects/gerador_boleto/src/pages/receipt/styles.js":"21","/home/daniel/Projects/gerador_boleto/src/componentes/input/input.js":"22","/home/daniel/Projects/gerador_boleto/src/componentes/button/styles.js":"23","/home/daniel/Projects/gerador_boleto/src/componentes/input/styles.js":"24"},{"size":500,"mtime":1633180448246,"results":"25","hashOfConfig":"26"},{"size":242,"mtime":1633180448246,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1633180448246,"results":"28","hashOfConfig":"26"},{"size":114,"mtime":1633180448246,"results":"29","hashOfConfig":"26"},{"size":397,"mtime":1633180448246,"results":"30","hashOfConfig":"26"},{"size":2778,"mtime":1633180448246,"results":"31","hashOfConfig":"26"},{"size":11799,"mtime":1633180448246,"results":"32","hashOfConfig":"26"},{"size":503,"mtime":1633180448246,"results":"33","hashOfConfig":"26"},{"size":586,"mtime":1633180448246,"results":"34","hashOfConfig":"26"},{"size":1159,"mtime":1633180448246,"results":"35","hashOfConfig":"26"},{"size":1502,"mtime":1633180448246,"results":"36","hashOfConfig":"26"},{"size":529,"mtime":1633180448246,"results":"37","hashOfConfig":"26"},{"size":500,"mtime":1633180448246,"results":"38","hashOfConfig":"39"},{"size":242,"mtime":1633180448246,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1633180448246,"results":"41","hashOfConfig":"39"},{"size":397,"mtime":1633180448246,"results":"42","hashOfConfig":"39"},{"size":114,"mtime":1633180448246,"results":"43","hashOfConfig":"39"},{"size":2778,"mtime":1633180448246,"results":"44","hashOfConfig":"39"},{"size":11799,"mtime":1633180448246,"results":"45","hashOfConfig":"39"},{"size":503,"mtime":1633180448246,"results":"46","hashOfConfig":"39"},{"size":586,"mtime":1633180448246,"results":"47","hashOfConfig":"39"},{"size":1159,"mtime":1633180448246,"results":"48","hashOfConfig":"39"},{"size":1502,"mtime":1633180448246,"results":"49","hashOfConfig":"39"},{"size":529,"mtime":1633180448246,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17a2bmo",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9cnrrd",{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/daniel/Projects/formexport/src/index.js",[],"/home/daniel/Projects/formexport/src/App.js",[],"/home/daniel/Projects/formexport/src/reportWebVitals.js",[],"/home/daniel/Projects/formexport/src/services/history.js",[],"/home/daniel/Projects/formexport/src/routes/routes.js",[],"/home/daniel/Projects/formexport/src/pages/receipt/receipt.js",["102","103","104"],"import React, { useState, useMemo, useEffect } from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport Button from \"../../componentes/button/button\";\nimport ReceiptContent from \"./receiptContent\";\nimport ReactToPdf from \"react-to-pdf\";\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nconst ref = React.createRef();\n\nconst Receipt = () => {\n  const [optionReceipt, setOptionReceit] = useState(1);\n\n  const exportPdf = () => {\n    html2canvas(document.querySelector(\"#teste\"), { scale: 0.79 }).then(\n      canvas => {\n        const imgData = canvas.toDataURL(\"image/png\");\n        const imgData2 = canvas.toDataURL(\"image/png\");\n        const imgData3 = canvas.toDataURL(\"image/png\");\n        const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n        pdf.addImage(imgData, \"PNG\", 0, 0);\n        pdf.addImage(imgData2, \"PNG\", 0, 100);\n        pdf.addImage(imgData3, \"PNG\", 0, 200);\n        pdf.save(\"recibo.pdf\");\n      }\n    );\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        spacing={1}\n        style={{\n          marginTop: \"200px\",\n        }}\n      >\n        <Grid item xs={4} md={4} lg={4}>\n          <Button\n            variant=\"primary\"\n            style={{ height: \"48px\" }}\n            onClick={() => setOptionReceit(1)}\n          >\n            Recibos Identicos\n          </Button>\n        </Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <Button\n            variant=\"primary\"\n            style={{ height: \"48px\" }}\n            onClick={() => setOptionReceit(3)}\n          >\n            Recibos Diferentes\n          </Button>\n        </Grid>\n        {optionReceipt === 1 && (\n          <Grid item xs={4} md={4} lg={4}>\n            <Button\n              variant=\"primary\"\n              style={{ height: \"48px\" }}\n              onClick={exportPdf}\n            >\n              Gerar PDF\n            </Button>\n          </Grid>\n        )}\n        {optionReceipt === 3 && (\n          <Grid item lg={4}>\n            <ReactToPdf\n              targetRef={ref}\n              filename=\"recibo.pdf\"\n              x={0.5}\n              y={0.5}\n              scale={0.79}\n            >\n              {({ toPdf }) => (\n                <Button\n                  variant=\"primary\"\n                  style={{ height: \"48px\" }}\n                  onClick={toPdf}\n                >\n                  Gerar PDF\n                </Button>\n              )}\n            </ReactToPdf>\n          </Grid>\n        )}\n      </Grid>\n      {optionReceipt === 1 && <ReceiptContent />}\n      {optionReceipt === 3 && (\n        <div ref={ref}>\n          <ReceiptContent />\n          <ReceiptContent />\n          <ReceiptContent />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Receipt;\n","/home/daniel/Projects/formexport/src/pages/receipt/receiptContent.js",["105","106","107","108","109","110","111","112","113"],"import React, { useState, useMemo, useEffect } from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport { Content, Separator, ContentBox, Text } from \"./styles\";\nimport { Box } from \"@mui/system\";\nimport { Divider } from \"@mui/material\";\nimport Input from \"../../componentes/input/input\";\nimport NumberFormat from \"react-number-format\";\n\nconst INITIAL_DATA = {\n  locatario: null,\n  aluguel: null,\n  multa: null,\n  iptu: null,\n  condominio: null,\n  valor: null,\n  recebedor: null,\n  valor_extenso: null,\n  imovel_tipo: null,\n  endereco: null,\n  proprietario: null,\n  data: null,\n};\n\nconst ReceiptContent = ({ reference }) => {\n  const [data, setData] = useState(INITIAL_DATA);\n\n  const currencyFormat = value => {\n    if (!Number(value)) return \"\";\n\n    const amount = new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    }).format(value / 100);\n\n    return `${amount}`;\n  };\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  return (\n    <>\n      {console.log(data)}\n      <Grid\n        style={{\n          width: \"1000px\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          display: \"flex\",\n          border: \"1px solid #A6A6A6\",\n          marginTop: \"10px\",\n          borderRadius: \"4px\",\n        }}\n        ref={reference}\n        id=\"teste\"\n      >\n        <Content>\n          <Grid>\n            <Grid container columns={2} spacing={1}>\n              <Grid item xs={12} md={12} lg={12}>\n                <Input\n                  label=\"LOCATÁRIO\"\n                  onChange={e => {\n                    setData(state => ({\n                      ...state,\n                      locatario: e.target.value,\n                    }));\n                  }}\n                />\n                <Divider style={{ marginTop: \"10px\" }} />\n              </Grid>\n              <Grid\n                item\n                xs={6}\n                md={6}\n                lg={6}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                RECIBO DE ALUGUEL\n              </Grid>\n              <Grid item xs={6} md={6} lg={6}>\n                <NumberFormat\n                  // isInvalid={nullValue}\n                  disabled\n                  customInput={Input}\n                  decimalScale={2}\n                  thousandSeparator=\".\"\n                  decimalSeparator=\",\"\n                  fixedDecimalScale\n                  placeholder=\"R$ 0,00\"\n                  allowLeadingZeros\n                  label=\"VALOR\"\n                  value={\n                    data.aluguel * 100 +\n                    data.iptu * 100 +\n                    data.multa * 100 +\n                    data.condominio * 100\n                  }\n                  prefix=\"R$ \"\n                  format={currencyFormat}\n                />\n              </Grid>\n            </Grid>\n            <ContentBox>\n              <Grid container columns={2} spacing={1}>\n                <Grid item xs={6} md={6} lg={6}>\n                  <NumberFormat\n                    // isInvalid={nullValue}\n                    customInput={Input}\n                    decimalScale={2}\n                    thousandSeparator=\".\"\n                    decimalSeparator=\",\"\n                    fixedDecimalScale\n                    placeholder=\"R$ 0,00\"\n                    allowLeadingZeros\n                    label=\"Aluguel\"\n                    onValueChange={values => {\n                      const { formattedValue } = values;\n                      const { value } = values;\n                      setData(state => ({\n                        ...state,\n                        aluguel: Number(value) / 100,\n                      }));\n                    }}\n                    prefix=\"R$ \"\n                    format={currencyFormat}\n                  />\n                </Grid>\n                <Grid item xs={6} md={6} lg={6}>\n                  <NumberFormat\n                    // isInvalid={nullValue}\n                    customInput={Input}\n                    decimalScale={2}\n                    thousandSeparator=\".\"\n                    decimalSeparator=\",\"\n                    fixedDecimalScale\n                    placeholder=\"R$ 0,00\"\n                    allowLeadingZeros\n                    label=\"Multa\"\n                    onValueChange={values => {\n                      const { formattedValue } = values;\n                      const { value } = values;\n                      setData(state => ({\n                        ...state,\n                        multa: Number(value) / 100,\n                      }));\n                    }}\n                    prefix=\"R$ \"\n                    format={currencyFormat}\n                  />\n                </Grid>\n                <Grid item xs={6} md={6} lg={6}>\n                  <NumberFormat\n                    // isInvalid={nullValue}\n                    customInput={Input}\n                    decimalScale={2}\n                    thousandSeparator=\".\"\n                    decimalSeparator=\",\"\n                    fixedDecimalScale\n                    placeholder=\"R$ 0,00\"\n                    allowLeadingZeros\n                    label=\"IPTU\"\n                    onValueChange={values => {\n                      const { formattedValue } = values;\n                      const { value } = values;\n                      setData(state => ({\n                        ...state,\n                        iptu: Number(value) / 100,\n                      }));\n                    }}\n                    prefix=\"R$ \"\n                    format={currencyFormat}\n                  />\n                </Grid>\n                <Grid item xs={6} md={6} lg={6}>\n                  <NumberFormat\n                    // isInvalid={nullValue}\n                    customInput={Input}\n                    decimalScale={2}\n                    thousandSeparator=\".\"\n                    decimalSeparator=\",\"\n                    fixedDecimalScale\n                    placeholder=\"R$ 0,00\"\n                    allowLeadingZeros\n                    label=\"Condomínio\"\n                    onValueChange={values => {\n                      const { formattedValue } = values;\n                      const { value } = values;\n                      setData(state => ({\n                        ...state,\n                        condominio: Number(value) / 100,\n                      }));\n                    }}\n                    prefix=\"R$ \"\n                    format={currencyFormat}\n                  />\n                </Grid>\n              </Grid>\n            </ContentBox>\n            <ContentBox style={{ flexDirection: \"column\" }}>\n              <Grid container columns={2} spacing={1}>\n                <Grid item xs={12} md={12} lg={12}>\n                  <Input\n                    label=\"Recebi (emos) de\"\n                    onChange={e => {\n                      setData(state => ({\n                        ...state,\n                        recebedor: e.target.value,\n                      }));\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                  <Input\n                    label=\"A importância de\"\n                    onChange={e => {\n                      setData(state => ({\n                        ...state,\n                        valor_extenso: e.target.value,\n                      }));\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                  <Input\n                    label=\"Proveniente do aluguel do imóvel\"\n                    onChange={e => {\n                      setData(state => ({\n                        ...state,\n                        imovel_tipo: e.target.value,\n                      }));\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                  <Input\n                    label=\"Sito à\"\n                    onChange={e => {\n                      setData(state => ({\n                        ...state,\n                        endereco: e.target.value,\n                      }));\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </ContentBox>\n            <ContentBox>\n              <Grid container columns={2} spacing={1}>\n                <Grid item xs={12} md={12} lg={12}>\n                  <Input\n                    label=\"Proprietário\"\n                    onChange={e => {\n                      setData(state => ({\n                        ...state,\n                        proprietario: e.target.value,\n                      }));\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={9} md={9} lg={9}>\n                  Assinatura:\n                </Grid>\n                <Grid item xs={3} md={3} lg={3}>\n                  Data: __/__/____\n                </Grid>\n              </Grid>\n            </ContentBox>\n          </Grid>\n        </Content>\n        <Content style={{ width: \"auto\", maxWidth: \"400px\" }}>\n          <Grid style={{ maxWidth: \"400px\" }}>\n            <Grid container columns={2} spacing={1}>\n              <Grid item xs={12} md={12} lg={12}>\n                PROPRIETÁRIO {data.proprietario}\n                <Divider style={{ marginTop: \"17px\" }} />\n              </Grid>\n              <Grid item xs={6} md={6} lg={6}>\n                RECIBO\n              </Grid>\n              <Grid item xs={6} md={6} lg={6}>\n                VALOR{\" \"}\n                {currencyFormat(\n                  data.aluguel * 100 +\n                    data.iptu * 100 +\n                    data.multa * 100 +\n                    data.condominio * 100\n                )}\n              </Grid>\n            </Grid>\n            <ContentBox style={{ marginTop: \"20px\" }}>\n              <Grid container columns={2} spacing={1}>\n                <Grid item xs={6} md={6} lg={6}>\n                  Aluguel R$ {currencyFormat(data.aluguel * 100)}\n                </Grid>\n                <Grid item xs={6} md={6} lg={6}>\n                  Multa R$ {currencyFormat(data.multa * 100)}\n                </Grid>\n                <Grid item xs={6} md={6} lg={6}>\n                  IPTU R$ {currencyFormat(data.iptu * 100)}\n                </Grid>\n                <Grid item xs={6} md={6} lg={6}>\n                  Condomínio R$ {currencyFormat(data.condominio * 100)}\n                </Grid>\n              </Grid>\n            </ContentBox>\n            <ContentBox\n              style={{ flexDirection: \"column\", wordWrap: \"break-word\" }}\n            >\n              <Grid container columns={2} spacing={5}>\n                <Grid item xs={12} md={12} lg={12}>\n                  Recebi (emos) de {data.recebedor}\n                </Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                  Proveniente do aluguel do imóvel {data.imovel_tipo}\n                </Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                  Sito à {data.endereco}\n                </Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                  Correspondente ao período de 1 mês vencido em: __/__/____\n                </Grid>\n              </Grid>\n            </ContentBox>\n            <Grid container>\n              <Grid\n                item\n                xs={12}\n                md={12}\n                lg={12}\n                style={{\n                  display: \"flex\",\n                  marginTop: \"10px\",\n                  alignItems: \"flex-end\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                Data: __/__/____\n              </Grid>\n            </Grid>\n          </Grid>\n        </Content>\n      </Grid>\n    </>\n  );\n};\n\nexport default ReceiptContent;\n","/home/daniel/Projects/formexport/src/componentes/button/button.js",[],"/home/daniel/Projects/formexport/src/pages/receipt/styles.js",[],"/home/daniel/Projects/formexport/src/componentes/input/input.js",["114"],"import { flexbox } from \"@mui/system\";\nimport React from \"react\";\n\nimport { Label, Input } from \"./styles\";\n\nconst InputComponent = ({\n  editing,\n  label,\n  placeholder,\n  name,\n  onChange,\n  type,\n  value,\n  required,\n  marginBottom,\n  disabled,\n  isInvalid,\n  min,\n  max,\n  defaultValue,\n  isInvalidMsg,\n  maxLength,\n  minLength,\n  showPassword,\n  onClick,\n  isPassword,\n}) => {\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {label && <Label>{label}: </Label>}\n        <Input\n          defaultValue={defaultValue}\n          editing={editing}\n          min={min}\n          max={max}\n          minLength={minLength}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          name={name}\n          onChange={onChange}\n          type={type}\n          value={value}\n          required={required}\n          marginBottom={marginBottom}\n          disabled={disabled}\n          isInvalid={isInvalid}\n        />\n      </div>\n      {isInvalid && <Label error>{isInvalidMsg}</Label>}\n    </>\n  );\n};\n\nexport default InputComponent;\n","/home/daniel/Projects/formexport/src/componentes/button/styles.js",[],"/home/daniel/Projects/formexport/src/componentes/input/styles.js",[],"/home/daniel/Projects/gerador_boleto/src/index.js",[],"/home/daniel/Projects/gerador_boleto/src/App.js",[],"/home/daniel/Projects/gerador_boleto/src/reportWebVitals.js",[],"/home/daniel/Projects/gerador_boleto/src/routes/routes.js",[],"/home/daniel/Projects/gerador_boleto/src/services/history.js",[],"/home/daniel/Projects/gerador_boleto/src/pages/receipt/receipt.js",["115","116","117"],"/home/daniel/Projects/gerador_boleto/src/pages/receipt/receiptContent.js",["118","119","120","121","122","123","124","125","126"],"/home/daniel/Projects/gerador_boleto/src/componentes/button/button.js",[],"/home/daniel/Projects/gerador_boleto/src/pages/receipt/styles.js",[],"/home/daniel/Projects/gerador_boleto/src/componentes/input/input.js",["127"],"/home/daniel/Projects/gerador_boleto/src/componentes/button/styles.js",[],"/home/daniel/Projects/gerador_boleto/src/componentes/input/styles.js",[],{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":34},{"ruleId":"128","severity":1,"message":"132","line":1,"column":36,"nodeType":"130","messageId":"131","endLine":1,"endColumn":45},{"ruleId":"128","severity":1,"message":"133","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":34},{"ruleId":"128","severity":1,"message":"133","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"134","line":3,"column":19,"nodeType":"130","messageId":"131","endLine":3,"endColumn":28},{"ruleId":"128","severity":1,"message":"135","line":3,"column":42,"nodeType":"130","messageId":"131","endLine":3,"endColumn":46},{"ruleId":"128","severity":1,"message":"136","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"137","line":119,"column":31,"nodeType":"130","messageId":"131","endLine":119,"endColumn":45},{"ruleId":"128","severity":1,"message":"137","line":142,"column":31,"nodeType":"130","messageId":"131","endLine":142,"endColumn":45},{"ruleId":"128","severity":1,"message":"137","line":165,"column":31,"nodeType":"130","messageId":"131","endLine":165,"endColumn":45},{"ruleId":"128","severity":1,"message":"137","line":188,"column":31,"nodeType":"130","messageId":"131","endLine":188,"endColumn":45},{"ruleId":"128","severity":1,"message":"138","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":34},{"ruleId":"128","severity":1,"message":"132","line":1,"column":36,"nodeType":"130","messageId":"131","endLine":1,"endColumn":45},{"ruleId":"128","severity":1,"message":"133","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":34},{"ruleId":"128","severity":1,"message":"133","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"134","line":3,"column":19,"nodeType":"130","messageId":"131","endLine":3,"endColumn":28},{"ruleId":"128","severity":1,"message":"135","line":3,"column":42,"nodeType":"130","messageId":"131","endLine":3,"endColumn":46},{"ruleId":"128","severity":1,"message":"136","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"137","line":119,"column":31,"nodeType":"130","messageId":"131","endLine":119,"endColumn":45},{"ruleId":"128","severity":1,"message":"137","line":142,"column":31,"nodeType":"130","messageId":"131","endLine":142,"endColumn":45},{"ruleId":"128","severity":1,"message":"137","line":165,"column":31,"nodeType":"130","messageId":"131","endLine":165,"endColumn":45},{"ruleId":"128","severity":1,"message":"137","line":188,"column":31,"nodeType":"130","messageId":"131","endLine":188,"endColumn":45},{"ruleId":"128","severity":1,"message":"138","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":17},"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'TextField' is defined but never used.","'Separator' is defined but never used.","'Text' is defined but never used.","'Box' is defined but never used.","'formattedValue' is assigned a value but never used.","'flexbox' is defined but never used."]